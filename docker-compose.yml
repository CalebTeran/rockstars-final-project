version: '3'
services:
  postgres_db18:
    image: postgres:14-alpine
    container_name: "postgres${PORT}"
    environment:
      - "POSTGRES_PASSWORD=${PSQL_PASS}"
      - "POSTGRES_DB=${PSQL_DB}"
      - "POSTGRES_USER=${PSQL_USER}"
    ports:
      - "10018:5518"
    volumes:
      - "${POSTGRES_VOLUME_PATH}:/usr/src/postgres"
    networks:
      - our-library-net 
    command: -p 5518

  redis_service18:
    image: redis:7-alpine
    container_name: "redis${PORT}"
    environment:
      - "SOME_REDIS_ENV=whatever"
    command: "--port 63${PORT}"
    ports:
      - "120${PORT}:63${PORT}"
    volumes: 
      - "${REDIS_VOLUME_PATH}:/usr/local/etc/redis"
    networks:
      - our-library-net

  web18:
    build: 
      dockerfile: Dockerfile
      context: ./back_app
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:80${PORT}"
    container_name: "django${PORT}"
    depends_on: 
      - postgres_db18
      - redis_service18
    environment:
      - "PSQL_DBNAME=${PSQL_DB}"
      - "PSQL_USERNAME=${PSQL_USER}"
      - "PSQL_PASS=${PSQL_PASS}"
      - "PSQL_HOST=postgres_db${PORT}"
      - "PSQL_PORT=55${PORT}"
      - "REDIS_HOST=redis_service${PORT}"
      - "REDIS_PORT=63${PORT}"
    volumes:
      - "${DJANGO_VOLUME_PATH}:/usr/src/django/music_app"
    ports:
      - "90${PORT}:80${PORT}"
    networks:
      - our-library-net
  
  front18:
    build:
      dockerfile: Dockerfile
      context: ./front_app
    command: sh -c "yarn install && yarn run start"
    container_name: "react${PORT}"
    volumes:
      - "${REACT_VOLUME_PATH}:/app"
    ports:
      - "110${PORT}:110${PORT}"
    networks:
      - our-library-net

networks:
  our-library-net:
    external: true
    driver: bridge